#pragma once

#include <memory>
#include <glm/vec2.hpp>

//--------------------------------------------------------------------------------------------------------------------------------------------------------------------
//  Player Tank class
//--------------------------------------------------------------------------------------------------------------------------------------------------------------------
namespace RenderEngine
{
	class Animated_Sprite;
}
//--------------------------------------------------------------------------------------------------------------------------------------------------------------------
class Player_Tank
{
public:
	//================================================================================================================================================================
	// Constructors and Destructors
	Player_Tank(std::shared_ptr<RenderEngine::Animated_Sprite> sprite, const float velocity, const glm::vec2 position);
	//================================================================================================================================================================
	enum class EOrientation : unsigned char
	{
		Top,
		Bottom,
		Left,
		Right
	};
	//============================================================================================================================================================
	// Public method 
	/* Render Player Tank */
	void Render() const;

	/* Setter Orientation Player on game view*/
	void Set_Orientation(const EOrientation orientation);

	/* Move Player Method*/
	void Move_Player(const bool move);

	/* Update Animation Player Sprite */
	void Update(const uint64_t delta_seconds);
	//============================================================================================================================================================

private:
	//================================================================================================================================================================
	bool Move;

	/* Speed velocity float */
	float Velocity;

	/* Current Position*/
	glm::vec2 Position;

	/* Vector */
	glm::vec2 Move_Offset;
	
	/* Orientation Enum */
	EOrientation Orientation;

	/* Sprte pointer*/
	std::shared_ptr<RenderEngine::Animated_Sprite> Tank_Sprite;
	//================================================================================================================================================================


};
//--------------------------------------------------------------------------------------------------------------------------------------------------------------------
