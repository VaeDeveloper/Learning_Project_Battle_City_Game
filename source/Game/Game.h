#pragma once

#include <array>
#include <glm/vec2.hpp>

#include <memory>

class Player_Tank;


//--------------------------------------------------------------------------------------------------------------------------------------------------------------------
//  Game class
//--------------------------------------------------------------------------------------------------------------------------------------------------------------------
enum class EGame_State : unsigned char
{
	Active, // Active Game
	Pause	// Pause Game
};
//--------------------------------------------------------------------------------------------------------------------------------------------------------------------
class Game
{
public:
	//================================================================================================================================================================
	// Constructors and Destructors
	~Game();
	Game(const glm::ivec2 window_size);
	//================================================================================================================================================================



	//================================================================================================================================================================
	// Public method 
	/* Game Render Method*/
	void Render();

	/* Update Game Method */
	void Update(const uint64_t delta_time);

	/* Keybinding Method*/
	void Set_Key(const int key, const int action);

	/* Init Method */
	bool Init();
	//================================================================================================================================================================


private:
	//================================================================================================================================================================
	/* Array Key bind */
	std::array<bool, 349> Keys;

	glm::ivec2 Window_Size;

	/* Game State enum class (uns char)*/
	EGame_State Current_Game_States;

	std::unique_ptr<Player_Tank> Player_Tank_Actor;
};
//--------------------------------------------------------------------------------------------------------------------------------------------------------------------