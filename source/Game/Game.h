#pragma once

#include <array>
#include <glm/vec2.hpp>

#include <memory>

class Player_Tank;


//--------------------------------------------------------------------------------------------------------------------------------------------------------------------
//  Game class
//--------------------------------------------------------------------------------------------------------------------------------------------------------------------
enum class EGame_State : unsigned char
{
	Active,											// Active Game
	Pause											// Pause Game
};
//--------------------------------------------------------------------------------------------------------------------------------------------------------------------
class Game
{
public:
	//================================================================================================================================================================
	~Game();
	Game(const glm::ivec2 window_size);				/* */
	//================================================================================================================================================================

	//================================================================================================================================================================
	void Render();									/* Game Render */
	void Update(const uint64_t delta_time);			/* Update Game */
	void Set_Key(const int key, const int action);	/* Keybinding */
	bool Init();									/* Init */
	//================================================================================================================================================================

private:
	//================================================================================================================================================================
	std::array<bool, 349> Keys;						/* Array Key bind */
	glm::ivec2 Window_Size;							/* */
	EGame_State Current_Game_States;				/* Game State enum class (uns char)*/
	std::unique_ptr<Player_Tank> Player_Tank_Actor;	/* */
};
//--------------------------------------------------------------------------------------------------------------------------------------------------------------------