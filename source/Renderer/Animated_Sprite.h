#pragma once

#include "Sprite.h"

#include <map>
#include <vector>


//--------------------------------------------------------------------------------------------------------------------------------------------------------------------
//  Renderer::Sprite
//--------------------------------------------------------------------------------------------------------------------------------------------------------------------
namespace Renderer
{
	class Animated_Sprite : public Sprite
	{
	public:
		//============================================================================================================================================================
		// Constructors and Destructors
		/*	Use the actual constructor for this class */
		Animated_Sprite(const std::shared_ptr<Texture2D> texture,
			const std::string initial_subtexture,
			const std::shared_ptr<Shader_Program> shader_program,
			const glm::vec2& position = glm::vec2(0.0f),
			const glm::vec2& size = glm::vec2(1.0f),
			const float rotation = 0.0f);
		//============================================================================================================================================================


		//============================================================================================================================================================
		//	 Public Methods
		void Insert_State(std::string state, std::vector<std::pair<std::string, size_t>> subtextures_duration);
	private:
		//============================================================================================================================================================
		// Private Variables
		std::map<std::string, std::vector<std::pair<std::string, size_t>>> States_Map;

		//============================================================================================================================================================

	};
}
//--------------------------------------------------------------------------------------------------------------------------------------------------------------------
